#!/usr/bin/env bash

# I want my .curlrc file in ~/.config, which is the default XDG_CONFIG_HOME
# But curl doesn't recognize that properly, so I define it to its default
# value here
: ${XDG_CONFIG_HOME:=${HOME}/.config}
export XDG_CONFIG_HOME
export ACKRC="${XDG_CONFIG_HOME}/.ackrc"

# Defined here to parallel above, and to be explicit for the next few lines
# No need to export it because I don't know of any programs that need this defined to work
: ${XDG_STATE_HOME:=${HOME}/.local/state}

# These next few lines are verbatim from history-eternal plugin. I want 'something' like this, in order to automatically
# create the XDG directory for $HISTFILE. And *this code* is very much something like itself.
# WARNING TVTROPES LINK: https://tvtropes.org/pmwiki/pmwiki.php/Main/ShapedLikeItself
HISTDIR="${XDG_STATE_HOME:-${HOME?}/.local/state}/bash"
[[ -d ${HISTDIR?} ]] || mkdir -p "${HISTDIR?}"
readonly HISTFILE="${HISTDIR?}/history" 2> /dev/null || true

# If not running interactively, don't do anything
case $- in
  *i*) ;;
    *) return;;
esac

# Uncomment either of these lines to enable bash-it doctor-like debugging
# export BASH_IT_LOG_LEVEL=6 # BASH_IT_LOG_LEVEL_INFO, ... which isn't available yet
# export BASH_IT_LOG_LEVEL=7 # BASH_IT_LOG_LEVEL_TRACE, which is the highes available. Only wsl seems to use it

# Path to the bash it configuration
export BASH_IT="${HOME}/.bash-it"
export VCSH_REPO_D="${XDG_CONFIG_HOME}/vcsh/repo.d" # exporting the variable as its own self
export BASH_IT_DOTFILES_GIT_REPO="${VCSH_REPO_D}/config.git" # convention recommends bare repos end in .git
export WSL_WINDOWS_USER_HOME="/mnt/c/Users/Jake"
# We're on WSL1, so might need this:
#export SCM_GIT_SHOW_MINIMAL_INFO=true

# Lock and Load a custom theme file.
# Leave empty to disable theming.
# location /.bash_it/themes/
export BASH_IT_THEME='jake'

# Some themes can show whether `sudo` has a current token or not.
# Set `$THEME_CHECK_SUDO` to `true` to check every prompt:
#THEME_CHECK_SUDO='true'

# (Advanced): Change this to the name of your remote repo if you
# cloned bash-it with a remote other than origin such as `bash-it`.
# export BASH_IT_REMOTE='bash-it'

# (Advanced): Change this to the name of the main development branch if
# you renamed it or if it was changed for some reason
# export BASH_IT_DEVELOPMENT_BRANCH='master'

# Your place for hosting Git repos. I use this for private repos.
export GIT_HOSTING='git@git.domain.com'

# Don't check mail when opening terminal.
unset MAILCHECK

# Change this to your console based IRC client of choice.
export IRC_CLIENT='irssi'

# Set this to the command you use for todo.txt-cli
export TODO="t"

# Set this to the location of your work or project folders
BASH_IT_PROJECT_PATHS="${HOME}/projects:${HOME}/wsl-projects"

# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=true
# Set to actual location of gitstatus directory if installed
# clone from git@github.com:romkatv/gitstatus.git
export SCM_GIT_GITSTATUS_DIR="${HOME}/bin/gitstatus"
# per default gitstatus uses 2 times as many threads as CPU cores, you can change this here if you must
#export GITSTATUS_NUM_THREADS=8

# Set Xterm/screen/Tmux title with only a short hostname.
# Uncomment this (or set SHORT_HOSTNAME to something else),
# Will otherwise fall back on $HOSTNAME.
#export SHORT_HOSTNAME=$(hostname -s)

# Set Xterm/screen/Tmux title with only a short username.
# Uncomment this (or set SHORT_USER to something else),
# Will otherwise fall back on $USER.
#export SHORT_USER=${USER:0:8}

# If your theme use command duration, uncomment this to
# enable display of last command duration.
#export BASH_IT_COMMAND_DURATION=true
# You can choose the minimum time in seconds before
# command duration is displayed.
#export COMMAND_DURATION_MIN_SECONDS=1

# Set Xterm/screen/Tmux title with shortened command and directory.
# Uncomment this to set.
#export SHORT_TERM_LINE=true

# Set vcprompt executable path for scm advance info in prompt (demula theme)
# https://github.com/djl/vcprompt
#export VCPROMPT_EXECUTABLE=~/.vcprompt/bin/vcprompt

# (Advanced): Uncomment this to make Bash-it reload itself automatically
# after enabling or disabling aliases, plugins, and completions.
# export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1

# Uncomment this to make Bash-it create alias reload.
# export BASH_IT_RELOAD_LEGACY=1

# Uncomment and modify this line if sdkman is installed somewhere else
# export SDKMAN_DIR="${HOME}/.sdkman"
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!

# The sdkman install script looks for "sdkman-init.sh" in your .bashrc file,               ### THIS LINE SUPPRESSES sdkman installer!
# which is expected to match a line that looks a lot like this:
# [[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh" ### THIS LINE SUPPRESSES sdkman installer!
# in order to decide whether to add its snippet.
# The bash-it convention is for that to be provided through the plugin sdkman
# This comment block is intended to 'sniff' like sdkman has already been here.
# Delete this block if it is impeding you

# Load Bash It
source "$BASH_IT"/bash_it.sh
